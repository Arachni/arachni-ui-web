<%= simple_form_for( @profile ) do |f| %>
    <%= f.error_notification %>

    <% if f.error_notification %>
        <div class="alert alert-error fade in">
            <ul>
            <%  @profile.errors.each do |attribute| %>
                    <% if attribute != :plugins %>
                    <li><%= attribute.to_s.humanize %> <%= f.error attribute %></li>
                    <% else  %>
                        <li><%= attribute.to_s.humanize %> <pre class="alert-error"><%= f.error attribute %></pre></li>
                    <% end  %>
            <% end %>
            </ul>
        </div>
    <% end %>

    <header class="jumbotron subhead" id="overview">
        <div class="row-fluid">
            <div class="span6">
                <%= f.input :name, label: false, placeholder: '(Required) Name' %>
            </div>

        <% if current_user.admin? %>
            <div class="span6">
                <%= f.input :global %>
                <p class="help-block">
                    Make this profile available to all users.
                </p>
            </div>
        <% end %>
        </div>

        <div class="row-fluid">
            <div class="span6">
                <%= f.input :description, label: false, placeholder: '(Required) Description',
                            hint: 'You can use Markdown for text formatting.',
                            input_html: { rows: 5, cols: 100 } %>
            </div>
            <div class="span6">
                <% if User.count > 1 %>
                    <%= f.association :users, label: 'Share with:',
                                      collection: User.all - [current_user, @profile.owner] %>
                <% end %>
            </div>

        </div>
    </header>

    <section id="scope">
        <fieldset>
            <legend id="scope-h">
                Scope
                <small>Rules about which resources to include</small>
            </legend>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_https_only %>
                    <%=  messages_for( :scope_https_only ) %>
                </div>
                <div class="span6">
                    <%= f.input :scope_auto_redundant_paths %>
                    <%=  messages_for( :scope_auto_redundant_paths ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_directory_depth_limit %>
                    <%=  messages_for( :scope_directory_depth_limit ) %>
                </div>
                <div class="span6">
                    <%= f.input :scope_page_limit %>
                    <%=  messages_for( :scope_page_limit ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_include_subdomains %>
                    <%=  messages_for( :scope_include_subdomains ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_exclude_binaries %>
                    <%=  messages_for( :scope_exclude_binaries ) %>
                </div>
              <div class="span6">
                <%= f.input :scope_dom_depth_limit %>
                <%=  messages_for( :scope_dom_depth_limit ) %>
              </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_redundant_path_patterns, input_html: {
                            value: @profile.scope_redundant_path_patterns.
                                           map { |k, v| "#{k}:#{v}" }.join( "\n" )
                    } %>

                    <%=  messages_for( :scope_redundant_path_patterns ) %>
                    <p class="alert alert-info">
                        Rules take the format of <em>pattern:times</em>,
                        input each rule in its own line.
                    </p>
                </div>
                <div class="span6">
                    <%= f.input :scope_exclude_content_patterns, input_html: { value: @profile.scope_exclude_content_patterns.join( "\n" ) } %>

                    <%=  messages_for( :scope_exclude_content_patterns ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_exclude_path_patterns, input_html: { value: @profile.scope_exclude_path_patterns.join( "\n" ) } %>
                    <%=  messages_for( :scope_exclude_path_patterns ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :scope_include_path_patterns, input_html: { value: @profile.scope_include_path_patterns.join( "\n" ) } %>
                    <%=  messages_for( :scope_include_path_patterns ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_restrict_paths, input_html: { value: @profile.scope_restrict_paths.join( "\n" ) } %>
                    <%=  messages_for( :scope_restrict_paths ) %>
                    <p class="alert alert-info">Input each path in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :scope_extend_paths, input_html: { value: @profile.scope_extend_paths.join( "\n" ) } %>
                    <%=  messages_for( :scope_extend_paths ) %>
                    <p class="alert alert-info">Input each path in its own line.</p>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :scope_exclude_file_extensions,
                                input_html: { value: @profile.scope_exclude_file_extensions.join( ' ' ) } %>
                    <%=  messages_for( :scope_exclude_file_extensions ) %>
                    <p class="alert alert-info">Separate extensions with a spaces.</p>
                </div>
                <div class="span6">
                    <%= f.input :scope_url_rewrites, input_html: {
                        value: @profile.scope_url_rewrites.
                                     map { |k, v| "#{k}:#{v}" }.join( "\n" )
                    } %>
                    <%=  messages_for( :scope_url_rewrites ) %>
                    <p class="alert alert-info">
                        Rules take the format of <em>pattern:substitution</em>,
                        input each rule in its own line.<br/>

                        For example, to convert <code>http://test.com/articles/some-stuff/23</code> to
                        <code>http://test.com/articles.php?id=23</code> use
                        <code>/articles\/[\w-]+\/(\d+)/:articles.php?id=\1</code>.
                    </p>
                </div>
          </div>

        </fieldset>
    </section>

    <section id="audit">
      <fieldset>
        <legend id="audit-h">
          Audit
          <small>How the scanner will audit web application inputs</small>
        </legend>

        <div class="row-fluid">
          <div class="span6">
            <%= f.input :audit_forms %>
            <%= messages_for( :audit_forms ) %>
          </div>
          <div class="span6">
            <%= f.input :audit_links %>
            <%= messages_for( :audit_links ) %>
          </div>
        </div>
          <div class="row-fluid">
              <div class="span6">
                  <%= f.input :audit_ui_forms, label: 'Audit UI forms' %>
                  <%= messages_for( :audit_ui_forms ) %>
              </div>
              <div class="span6">
                  <%= f.input :audit_ui_inputs, label: 'Audit UI inputs' %>
                  <%= messages_for( :audit_ui_inputs ) %>
              </div>
          </div>
        <div class="row-fluid">
          <div class="span6">
            <%= f.input :audit_cookies %>
            <%= messages_for( :audit_cookies ) %>

            <%= f.input :audit_nested_cookies %>
            <%= messages_for( :audit_nested_cookies ) %>
          </div>
          <div class="span6">
            <%= f.input :audit_headers %>
            <%= messages_for( :audit_headers ) %>
          </div>
        </div>
          <div class="row-fluid">
              <div class="span6">
                  <%= f.input :audit_jsons %>
                  <%= messages_for( :audit_jsons ) %>
              </div>
              <div class="span6">
                  <%= f.input :audit_xmls %>
                  <%= messages_for( :audit_xmls ) %>
              </div>
          </div>
        <div class="row-fluid">
          <div class="span6">
            <%= f.input :audit_with_both_http_methods %>
            <%= messages_for( :audit_with_both_http_methods ) %>
          </div>
          <div class="span6">
            <%= f.input :audit_cookies_extensively %>
            <%= messages_for( :audit_cookies_extensively ) %>
          </div>
        </div>
        <div class="row-fluid">
          <div class="span6">
            <%= f.input :audit_exclude_vector_patterns,
                        input_html: { value: @profile.audit_exclude_vector_patterns.join( "\n" ) } %>

            <%= messages_for( :audit_exclude_vector_patterns ) %>
            <p class="alert alert-info">Input one pattern per line.</p>
          </div>
          <div class="span6">
            <%= f.input :audit_include_vector_patterns,
                        input_html: { value: @profile.audit_include_vector_patterns.join( "\n" ) } %>

            <%= messages_for( :audit_include_vector_patterns ) %>
            <p class="alert alert-info">Input one pattern per line.</p>
          </div>
        </div>
        <div class="row-fluid">
          <div class="span6">
            <%= f.input :audit_link_templates, input_html: { value: @profile.audit_link_templates.join( "\n" ) } %>

            <%= messages_for( :audit_link_templates ) %>
            <p class="alert alert-info">
              For example, to extract the <code>input1</code> and <code>input2</code> inputs from
              <code>http://test.com/input1/value1/input2/value2</code> use
              <code>/input1\/(?&lt;input1&gt;\w+)\/input2\/(?&lt;input2&gt;\w+)/</code>.
            </p>
          </div>
        </div>

      </fieldset>
    </section>

    <section id="input">
      <fieldset>
        <legend id="input-h">
          Input
          <small>Values to use to fill in inputs</small>
        </legend>

        <div class="row-fluid">
          <div class="span6">
            <%= f.input :input_values, input_html: {
                    value: @profile.input_values.
                                   map { |k, v| "#{k}=#{v}" }.join( "\n" )
            } %>
            <%= messages_for( :input_values ) %>
            <p class="alert alert-info">
              Rules take the format of <em>name=value</em>,
              input each rule in its own line -- <kbd>name</kbd> can be a pattern.
            </p>
          </div>
        </div>
      </fieldset>
    </section>

    <section id="http">
        <fieldset>
            <legend id="http-h">
                HTTP
                <small>How the scanner will communicate with the web application</small>
            </legend>

            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_authentication_username %>
                    <%=  messages_for( :http_authentication_username ) %>
                </div>
                <div class="span6">
                    <%= f.input :http_authentication_password, as: :string %>
                    <%=  messages_for( :http_authentication_password ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_authentication_type,
                                default: 'auto',
                                collection: Arachni::OptionGroups::HTTP::AUTHENTICATION_TYPES %>
                    <%= messages_for( :http_authentication_type ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_request_concurrency %>
                    <%=  messages_for( :http_request_concurrency ) %>
                </div>
                <div class="span6">
                    <%= f.input :http_proxy_host %>
                    <%=  messages_for( :http_proxy_host ) %>
                </div>
            </div>
            <div class="row-fluid">
              <div class="span6">
                <%= f.input :http_request_redirect_limit %>
                <%=  messages_for( :http_request_redirect_limit ) %>
              </div>
              <div class="span6">
                    <%= f.input :http_request_queue_size %>
                    <%=  messages_for( :http_request_queue_size ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_proxy_port %>
                    <%=  messages_for( :http_proxy_port ) %>
                </div>
                <div class="span6">
                    <%= f.input :http_proxy_username %>
                    <%=  messages_for( :http_proxy_username ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_proxy_password, as: :string %>
                    <%= messages_for( :http_proxy_password ) %>
                </div>
                <div class="span6">
                    <%= f.input :http_proxy_type, collection: Arachni::OptionGroups::HTTP::PROXY_TYPES %>
                    <%= messages_for( :http_proxy_type ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_user_agent, as: :string %>
                    <%= messages_for( :http_user_agent ) %>
                </div>
                <div class="span6">
                    <%= f.input :http_request_timeout %>
                    <%= messages_for( :http_request_timeout ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_response_max_size %>
                    <%= messages_for( :http_response_max_size ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_cookies, input_html: {
                            value: @profile.http_cookies.map { |k, v| "#{k}=#{v}" }.join( "\n" )
                        } %>

                    <%= messages_for( :http_cookies ) %>
                    <p class="alert alert-info">
                        Cookies take the format of <em>name=value</em>,
                        input each cookie in its own line.
                    </p>
                </div>
                <div class="span6">
                    <%= f.input :http_request_headers, input_html: {
                            value: @profile.http_request_headers.map { |k, v| "#{k}=#{v}" }.join( "\n" )
                        } %>

                    <%= messages_for( :http_request_headers ) %>
                    <p class="alert alert-info">
                        Headers take the format of <em>name=value</em>,
                        input each header in its own line.
                    </p>
                </div>
            </div>
        </fieldset>
    </section>

    <section id="fingerprinting">
        <fieldset>
            <legend id="fingerprinting-h">
                Platform fingerprinting
                <small>What platforms should the scanner anticipate</small>
            </legend>

            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :no_fingerprinting,
                                label: 'Disable fingerprinting'
                    %>
                </div>
            </div>

            <h4>
                Platforms
                <small>Explicitly specify platforms to improve efficiency</small>
            </h4>


            <div class="row-fluid">
            <% [:os, :db, :servers, :languages, :frameworks].each_with_index do |type, i| %>

                <div class="span2">
                    <h5><%= platform_type_fullname( type ) %></h5>
                    <%= f.input :platforms, collection: valid_platforms( type ),
                                label:  false,
                                as: :check_boxes,
                                label_method: lambda { |p| platform_fullname( p ) }
                    %>
                </div>
            <% end %>
            </div>

        </fieldset>
    </section>

    <section id="checks">
        <fieldset>
            <legend id="checks-h">
                Checks
                <small>The security checks to be run again the web application</small>
            </legend>

            <div class="row-fluid">
                <div class="span3">
                    <input id="search" type="text" class="string optional"
                           placeholder="Filter modules by name or description">
                </div>

                <div class="span2">
                    <button class="btn btn-small check">Check all</button>
                    <button class="btn btn-small uncheck">Uncheck all</button>
                </div>
            </div>

            <h4>
                Active
                <small>These checks will actively engage the web application via its inputs (links, forms, etc.)</small>
            </h4>
            <% audit = checks.select { |n, i| i[:path].include?( '/checks/active' ) } %>
            <% if audit.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: audit,
                                   form:       f,
                                   selected:   @profile.checks,
                                   input:      :checks,
                                   class_name: 'span6'
                           } %>
            <% else %>
                <p class="alert alert-info">No active checks are available.</p>
            <% end %>


            <h4>
                Passive
                <small>These checks will passively collect data</small>
            </h4>
            <% recon = checks.select { |n, i| i[:path].include?( '/checks/passive' ) } %>
            <% if recon.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: recon,
                                   form:       f,
                                   selected:   @profile.checks,
                                   input:      :checks,
                                   class_name: 'span6'
                           } %>
            <% else %>
                <p class="alert alert-info">No passive checks are available.</p>
            <% end %>

        </fieldset>

    </section>

    <section id="plugins">
        <fieldset>
            <legend id="plugins-h">
                Plugins
                <small>Assisting components to be enabled during the process</small>
            </legend>

            <p class="alert">
                Plugins which require an option of type <em>file</em> are
                not supported and thus are not listed.
            </p>

            <% if errors = @profile.errors.messages[:plugins] || [] %>
                <% errors.each do |message| %>
                    <pre class="alert alert-error"><%= message %></pre>
                <%end%>
            <%end%>

            <% if plugins.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: plugins,
                                   form:       f,
                                   selected:   @profile.plugins,
                                   input:      :plugins,
                                   class_name: 'span6'
                           } %>
            <% end %>
        </fieldset>
    </section>

    <section id="browser_cluster">
      <fieldset>
        <legend id="browser_cluster-h">
          Browser cluster
          <small>Browser-related options</small>
        </legend>

        <div class="row-fluid">
          <div class="span6">
            <%= f.input :browser_cluster_pool_size %>
            <%= messages_for( :browser_cluster_pool_size ) %>
          </div>
          <div class="span6">
            <%= f.input :browser_cluster_job_timeout %>
            <%= messages_for( :browser_cluster_job_timeout ) %>
          </div>
        </div>
        <div class="row-fluid">
          <div class="span6">
            <%= f.input :browser_cluster_worker_time_to_live %>
            <%= messages_for( :browser_cluster_worker_time_to_live ) %>
          </div>
          <div class="span6">
            <%= f.input :browser_cluster_ignore_images %>
            <%= messages_for( :browser_cluster_ignore_images ) %>
          </div>
        </div>
        <div class="row-fluid">
          <div class="span6">
            <%= f.input :browser_cluster_screen_width %>
            <%= messages_for( :browser_cluster_screen_width ) %>
          </div>
          <div class="span6">
            <%= f.input :browser_cluster_screen_height %>
            <%= messages_for( :browser_cluster_screen_height ) %>
          </div>
        </div>
      </fieldset>
    </section>

    <section id="session">
        <fieldset>
            <legend id="session-h">
                Session check
                <small>How the scanner will determine its session's validity</small>
            </legend>

            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :session_check_url, as: :string, label: false,
                        placeholder: 'Session check URL' %>
                    <%= messages_for( :session_check_url ) %>
                </div>
                <div class="span6">
                    <%= f.input :session_check_pattern, as: :string, label: false,
                                placeholder: 'Session check pattern' %>
                    <%= messages_for( :session_check_pattern ) %>
                </div>
            </div>
        </fieldset>
    </section>

    <div class="form-actions">
        <%= f.button :submit %>
    </div>
<% end %>
