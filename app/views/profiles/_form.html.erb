<%= simple_form_for( @profile ) do |f| %>
    <%= f.error_notification %>

    <% if f.error_notification %>
        <div class="alert alert-error fade in">
            <ul>
            <%  @profile.errors.each do |attribute| %>
                    <% if attribute != :plugins %>
                    <li><%= attribute.to_s.humanize %> <%= f.error attribute %></li>
                    <% else  %>
                        <li><%= attribute.to_s.humanize %> <pre class="alert-error"><%= f.error attribute %></pre></li>
                    <% end  %>
            <% end %>
            </ul>
        </div>
    <% end %>

    <header class="jumbotron subhead" id="overview">
        <div class="row-fluid">
            <div class="span6">
                <%= f.input :name, label: false, placeholder: '(Required) Name' %>
            </div>

        <% if current_user.admin? %>
            <div class="span6">
                <%= f.input :global %>
                <p class="help-block">
                    Make this profile available to all users.
                </p>
            </div>
        <% end %>
        </div>

        <div class="row-fluid">
            <div class="span6">
                <%= f.input :description, label: false, placeholder: '(Required) Description',
                            hint: 'You can use <a href="http://daringfireball.net/' +
                                      'projects/markdown/syntax">Markdown</a> for text formatting.',
                            input_html: { rows: 5, cols: 100 } %>
            </div>
            <div class="span6">
                <% if User.count > 1 %>
                    <%= f.association :users, label: 'Share with:',
                                      collection: User.all - [current_user, @profile.owner] %>
                <% end %>
            </div>

        </div>
    </header>

    <section id="spider">
        <fieldset>
            <legend id="spider-h">
                Spider
                <small>How the scanner will crawl the web application</small>
            </legend>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :https_only %>
                    <%=  messages_for( :https_only ) %>
                </div>
                <div class="span6">
                    <%= f.input :auto_redundant %>
                    <%=  messages_for( :auto_redundant ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :depth_limit %>
                    <%=  messages_for( :depth_limit ) %>
                </div>
                <div class="span6">
                    <%= f.input :link_count_limit %>
                    <%=  messages_for( :link_count_limit ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :redirect_limit %>
                    <%=  messages_for( :redirect_limit ) %>
                </div>
                <div class="span6">
                    <%= f.input :follow_subdomains %>
                    <%=  messages_for( :follow_subdomains ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :exclude_binaries %>
                    <%=  messages_for( :exclude_binaries ) %>
                </div>

                <div class="span6">
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :redundant, input_html: {
                            value: @profile.redundant.
                                           map { |k, v| "#{k}:#{v}" }.join( "\n" )
                    } %>

                    <%=  messages_for( :redundant ) %>
                    <p class="alert alert-info">
                        Rules take the format of <em>pattern:times</em>,
                        input each rule in its own line.
                    </p>
                </div>
                <div class="span6">
                    <%= f.input :exclude_pages, input_html: { value: @profile.exclude_pages.join( "\n" ) } %>

                    <%=  messages_for( :exclude_pages ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :exclude, input_html: { value: @profile.exclude.join( "\n" ) } %>
                    <%=  messages_for( :exclude ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :include, input_html: { value: @profile.include.join( "\n" ) } %>
                    <%=  messages_for( :include ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :restrict_paths, input_html: { value: @profile.restrict_paths.join( "\n" ) } %>
                    <%=  messages_for( :restrict_paths ) %>
                    <p class="alert alert-info">Input each path in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :extend_paths, input_html: { value: @profile.extend_paths.join( "\n" ) } %>
                    <%=  messages_for( :extend_paths ) %>
                    <p class="alert alert-info">Input each path in its own line.</p>
                </div>
            </div>
        </fieldset>
    </section>

    <section id="http">
        <fieldset>
            <legend id="http-h">
                HTTP
                <small>How the scanner will communicate with the web application</small>
            </legend>

            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_username %>
                    <%=  messages_for( :http_username ) %>
                </div>
                <div class="span6">
                    <%= f.input :http_password, as: :string %>
                    <%=  messages_for( :http_password ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_req_limit %>
                    <%=  messages_for( :http_req_limit ) %>
                </div>
                <div class="span6">
                    <%= f.input :proxy_host %>
                    <%=  messages_for( :proxy_host ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :http_queue_size %>
                    <%=  messages_for( :http_queue_size ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :proxy_port %>
                    <%=  messages_for( :proxy_port ) %>
                </div>
                <div class="span6">
                    <%= f.input :proxy_username %>
                    <%=  messages_for( :proxy_username ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :proxy_password, as: :string %>
                    <%= messages_for( :proxy_password ) %>
                </div>
                <div class="span6">
                    <%= f.input :proxy_type %>
                    <%= messages_for( :proxy_type ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :user_agent, as: :string %>
                    <%= messages_for( :user_agent ) %>
                </div>
                <div class="span6">
                    <%= f.input :http_timeout %>
                    <%= messages_for( :http_timeout ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :cookies, input_html: {
                            value: @profile.cookies.map { |k, v| "#{k}=#{v}" }.join( "\n" )
                        } %>

                    <%= messages_for( :cookies ) %>
                    <p class="alert alert-info">
                        Cookies take the format of <em>name=value</em>,
                        input each cookie in its own line.
                    </p>
                </div>
                <div class="span6">
                    <%= f.input :custom_headers, input_html: {
                            value: @profile.custom_headers.map { |k, v| "#{k}=#{v}" }.join( "\n" )
                        } %>

                    <%= messages_for( :custom_headers ) %>
                    <p class="alert alert-info">
                        Headers take the format of <em>name=value</em>,
                        input each header in its own line.
                    </p>
                </div>
            </div>
        </fieldset>
    </section>

    <section id="auditor">
        <fieldset>
            <legend id="auditor-h">
                Auditor
                <small>How the scanner will audit the web application</small>
            </legend>

            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :audit_forms %>
                    <%= messages_for( :audit_forms ) %>
                </div>
                <div class="span6">
                    <%= f.input :audit_links %>
                    <%= messages_for( :audit_links ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :audit_cookies %>
                    <%= messages_for( :audit_cookies ) %>
                </div>
                <div class="span6">
                    <%= f.input :audit_headers %>
                    <%= messages_for( :audit_headers ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :fuzz_methods %>
                    <%= messages_for( :fuzz_methods ) %>
                </div>
                <div class="span6">
                    <%= f.input :audit_cookies_extensively %>
                    <%= messages_for( :audit_cookies_extensively ) %>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :exclude_vectors, input_html: { value: @profile.exclude_vectors.join( "\n" ) } %>

                    <%= messages_for( :exclude_vectors ) %>
                    <p class="alert alert-info">Input each parameter/input/vector name in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :exclude_cookies, input_html: { value: @profile.exclude_cookies.join( "\n" ) } %>
                    <%= messages_for( :exclude_cookies ) %>
                    <p class="alert alert-info">Input each cookie's name in its own line.</p>
                </div>
            </div>
        </fieldset>
    </section>

    <section id="fingerprinting">
        <fieldset>
            <legend id="fingerprinting-h">
                Platform fingerprinting
                <small>What platforms should the scanner anticipate</small>
            </legend>

            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :no_fingerprinting,
                                label: 'Disable fingerprinting'
                    %>
                </div>
            </div>

            <h4>
                Platforms
                <small>Explicitly specify platforms to improve efficiency</small>
            </h4>


            <div class="row-fluid">
            <% [:os, :db, :servers, :languages, :frameworks].each_with_index do |type, i| %>

                <div class="span2">
                    <h5><%= platform_type_fullname( type ) %></h5>
                    <%= f.input :platforms, collection: valid_platforms( type ),
                                label:  false,
                                as: :check_boxes,
                                label_method: lambda { |p| platform_fullname( p ) }
                    %>
                </div>
            <% end %>
            </div>

        </fieldset>
    </section>

    <section id="modules">
        <fieldset>
            <legend id="modules-h">
                Modules
                <small>The security checks to be run again the web application</small>
            </legend>

            <div class="row-fluid">
                <div class="span3">
                    <input id="search" type="text" class="string optional"
                           placeholder="Filter modules by name or description">
                </div>

                <div class="span2">
                    <button class="btn btn-small check">Check all</button>
                    <button class="btn btn-small uncheck">Uncheck all</button>
                </div>
            </div>

            <h4>
                Audit (Active)
                <small>These checks will actively engage the web application via its inputs (links, forms, etc.)</small>
            </h4>
            <% audit = modules.select { |n, i| i[:path].include?( '/modules/audit' ) } %>
            <% if audit.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: audit,
                                   form:       f,
                                   selected:   @profile.modules,
                                   input:      :modules,
                                   class_name: 'span6'
                           } %>
            <% else %>
                <p class="alert alert-info">No audit modules are available.</p>
            <% end %>


            <h4>
                Recon (Passive)
                <small>These checks will passively collect data</small>
            </h4>
            <% recon = modules.select { |n, i| i[:path].include?( '/modules/recon' ) } %>
            <% if recon.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: recon,
                                   form:       f,
                                   selected:   @profile.modules,
                                   input:      :modules,
                                   class_name: 'span6'
                           } %>
            <% else %>
                <p class="alert alert-info">No recon modules are available.</p>
            <% end %>

        </fieldset>

    </section>

    <section id="plugins">
        <fieldset>
            <legend id="plugins-h">
                Plugins
                <small>Assisting components to be enabled during the process</small>
            </legend>

            <p class="alert">
                Plugins which require an option of type <em>file</em> are
                not supported and thus are not listed.
            </p>

            <% if errors = @profile.errors.messages[:plugins] || [] %>
                <% errors.each do |message| %>
                    <pre class="alert alert-error"><%= message %></pre>
                <%end%>
            <%end%>

            <% if plugins.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: plugins,
                                   form:       f,
                                   selected:   @profile.plugins,
                                   input:      :plugins,
                                   class_name: 'span6'
                           } %>
            <% end %>
        </fieldset>
    </section>

    <section id="login">
        <fieldset>
            <legend id="login-h">
                Login check
                <small>How the scanner will determine its session's validity</small>
            </legend>

            <div class="row-fluid">
                <div class="span6">
                    <%= f.input :login_check_url, as: :string, label: false,
                        placeholder: 'Login check URL' %>
                    <%= messages_for( :login_check_url ) %>
                </div>
                <div class="span6">
                    <%= f.input :login_check_pattern, as: :string, label: false,
                                placeholder: 'Login check pattern' %>
                    <%= messages_for( :login_check_pattern ) %>
                </div>
            </div>
        </fieldset>
    </section>


    <div class="form-actions">
        <%= f.button :submit %>
    </div>
<% end %>
